"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeTextFile = exports.writeTemplate = exports.readAllFiles = void 0;
var chalk_1 = __importDefault(require("chalk"));
var fs_1 = require("fs");
var promises_1 = require("fs/promises");
var path_1 = require("path");
var inquirer_1 = require("./inquirer");
function readAllFiles(folder, ignore) {
    if (ignore === void 0) { ignore = []; }
    return __awaiter(this, void 0, void 0, function () {
        var files, result;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, promises_1.readdir(folder)];
                case 1:
                    files = (_a.sent()).filter(function (file) { return !ignore.includes(file); });
                    result = [];
                    return [4 /*yield*/, Promise.all(files.map(function (file) { return __awaiter(_this, void 0, void 0, function () {
                            var path, fileStat, children;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        path = path_1.join(folder, file);
                                        return [4 /*yield*/, promises_1.stat(path)];
                                    case 1:
                                        fileStat = _a.sent();
                                        if (!fileStat.isDirectory()) return [3 /*break*/, 3];
                                        return [4 /*yield*/, readAllFiles(path)];
                                    case 2:
                                        children = _a.sent();
                                        result.push.apply(result, children);
                                        return [3 /*break*/, 4];
                                    case 3:
                                        result.push(path);
                                        _a.label = 4;
                                    case 4: return [2 /*return*/];
                                }
                            });
                        }); }))];
                case 2:
                    _a.sent();
                    return [2 /*return*/, result];
            }
        });
    });
}
exports.readAllFiles = readAllFiles;
function writeTemplate(ascii, title, fontSize) {
    return __awaiter(this, void 0, void 0, function () {
        var templatePath, template, finalContent, path;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    templatePath = path_1.join(__dirname, '../../assets/template.html');
                    if (!fs_1.existsSync(templatePath)) {
                        return [2 /*return*/, chalk_1.default.red('The template file was not found!')];
                    }
                    return [4 /*yield*/, promises_1.readFile(templatePath)];
                case 1:
                    template = (_a.sent()).toString();
                    ascii = ascii.replace(/ /g, '&nbsp;').replace(/\n/g, '<br/>');
                    finalContent = template
                        .replace('%TITLE%', title)
                        .replace('%BODY%', ascii)
                        .replace('%FONTSIZE%', fontSize);
                    return [4 /*yield*/, inquirer_1.askDestinationPath('index.html')];
                case 2:
                    path = _a.sent();
                    return [4 /*yield*/, promises_1.writeFile(path, finalContent + '\n')];
                case 3:
                    _a.sent();
                    return [2 /*return*/, path];
            }
        });
    });
}
exports.writeTemplate = writeTemplate;
function writeTextFile(ascii) {
    return __awaiter(this, void 0, void 0, function () {
        var path;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, inquirer_1.askDestinationPath()];
                case 1:
                    path = _a.sent();
                    return [4 /*yield*/, promises_1.writeFile(path, ascii + '\n')];
                case 2:
                    _a.sent();
                    return [2 /*return*/, path];
            }
        });
    });
}
exports.writeTextFile = writeTextFile;
